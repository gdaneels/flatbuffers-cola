#ifndef COLA_BUILDER_H
#define COLA_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef COLA_READER_H
#include "cola_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

#define __Beverage_CocaColaType_formal_args , Beverage_CocaColaType_enum_t v0
#define __Beverage_CocaColaType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, Beverage_CocaColaType, Beverage_CocaColaType_enum_t)
#define __Beverage_Ingredient_formal_args , Beverage_Ingredient_enum_t v0
#define __Beverage_Ingredient_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, Beverage_Ingredient, Beverage_Ingredient_enum_t)

typedef flatbuffers_union_ref_t Beverage_Packaging_union_ref_t;
typedef flatbuffers_union_vec_ref_t Beverage_Packaging_union_vec_ref_t;
static Beverage_Packaging_union_ref_t Beverage_Packaging_clone(flatbuffers_builder_t *B, Beverage_Packaging_union_t t);

static const flatbuffers_voffset_t __Beverage_Can_required[] = { 0 };
typedef flatbuffers_ref_t Beverage_Can_ref_t;
static Beverage_Can_ref_t Beverage_Can_clone(flatbuffers_builder_t *B, Beverage_Can_table_t t);
__flatbuffers_build_table(flatbuffers_, Beverage_Can, 2)

static const flatbuffers_voffset_t __Beverage_Bottle_required[] = { 0 };
typedef flatbuffers_ref_t Beverage_Bottle_ref_t;
static Beverage_Bottle_ref_t Beverage_Bottle_clone(flatbuffers_builder_t *B, Beverage_Bottle_table_t t);
__flatbuffers_build_table(flatbuffers_, Beverage_Bottle, 2)

static const flatbuffers_voffset_t __Beverage_CocaColaCan_required[] = { 0 };
typedef flatbuffers_ref_t Beverage_CocaColaCan_ref_t;
static Beverage_CocaColaCan_ref_t Beverage_CocaColaCan_clone(flatbuffers_builder_t *B, Beverage_CocaColaCan_table_t t);
__flatbuffers_build_table(flatbuffers_, Beverage_CocaColaCan, 8)

#define __Beverage_Can_formal_args , flatbuffers_string_ref_t v0, flatbuffers_bool_t v1
#define __Beverage_Can_call_args , v0, v1
static inline Beverage_Can_ref_t Beverage_Can_create(flatbuffers_builder_t *B __Beverage_Can_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Beverage_Can, Beverage_Can_file_identifier, Beverage_Can_type_identifier)

#define __Beverage_Bottle_formal_args , flatbuffers_string_ref_t v0, int32_t v1
#define __Beverage_Bottle_call_args , v0, v1
static inline Beverage_Bottle_ref_t Beverage_Bottle_create(flatbuffers_builder_t *B __Beverage_Bottle_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Beverage_Bottle, Beverage_Bottle_file_identifier, Beverage_Bottle_type_identifier)

#define __Beverage_CocaColaCan_formal_args ,\
  int32_t v0, int32_t v1, int32_t v2, Beverage_CocaColaType_enum_t v3,\
  int32_t v4, Beverage_Ingredient_vec_ref_t v5, Beverage_Packaging_union_ref_t v7
#define __Beverage_CocaColaCan_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v7
static inline Beverage_CocaColaCan_ref_t Beverage_CocaColaCan_create(flatbuffers_builder_t *B __Beverage_CocaColaCan_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Beverage_CocaColaCan, Beverage_CocaColaCan_file_identifier, Beverage_CocaColaCan_type_identifier)

static inline Beverage_Packaging_union_ref_t Beverage_Packaging_as_NONE(void)
{ Beverage_Packaging_union_ref_t uref; uref.type = Beverage_Packaging_NONE; uref.value = 0; return uref; }
static inline Beverage_Packaging_union_ref_t Beverage_Packaging_as_Can(Beverage_Can_ref_t ref)
{ Beverage_Packaging_union_ref_t uref; uref.type = Beverage_Packaging_Can; uref.value = ref; return uref; }
static inline Beverage_Packaging_union_ref_t Beverage_Packaging_as_Bottle(Beverage_Bottle_ref_t ref)
{ Beverage_Packaging_union_ref_t uref; uref.type = Beverage_Packaging_Bottle; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, Beverage_Packaging)

static Beverage_Packaging_union_ref_t Beverage_Packaging_clone(flatbuffers_builder_t *B, Beverage_Packaging_union_t u)
{
    switch (u.type) {
    case 1: return Beverage_Packaging_as_Can(Beverage_Can_clone(B, (Beverage_Can_table_t)u.value));
    case 2: return Beverage_Packaging_as_Bottle(Beverage_Bottle_clone(B, (Beverage_Bottle_table_t)u.value));
    default: return Beverage_Packaging_as_NONE();
    }
}

__flatbuffers_build_string_field(0, flatbuffers_, Beverage_Can_material, Beverage_Can)
__flatbuffers_build_scalar_field(1, flatbuffers_, Beverage_Can_recyclable, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), Beverage_Can)

static inline Beverage_Can_ref_t Beverage_Can_create(flatbuffers_builder_t *B __Beverage_Can_formal_args)
{
    if (Beverage_Can_start(B)
        || Beverage_Can_material_add(B, v0)
        || Beverage_Can_recyclable_add(B, v1)) {
        return 0;
    }
    return Beverage_Can_end(B);
}

static Beverage_Can_ref_t Beverage_Can_clone(flatbuffers_builder_t *B, Beverage_Can_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Beverage_Can_start(B)
        || Beverage_Can_material_pick(B, t)
        || Beverage_Can_recyclable_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Beverage_Can_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, Beverage_Bottle_material, Beverage_Bottle)
__flatbuffers_build_scalar_field(1, flatbuffers_, Beverage_Bottle_volume_ml, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Beverage_Bottle)

static inline Beverage_Bottle_ref_t Beverage_Bottle_create(flatbuffers_builder_t *B __Beverage_Bottle_formal_args)
{
    if (Beverage_Bottle_start(B)
        || Beverage_Bottle_material_add(B, v0)
        || Beverage_Bottle_volume_ml_add(B, v1)) {
        return 0;
    }
    return Beverage_Bottle_end(B);
}

static Beverage_Bottle_ref_t Beverage_Bottle_clone(flatbuffers_builder_t *B, Beverage_Bottle_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Beverage_Bottle_start(B)
        || Beverage_Bottle_material_pick(B, t)
        || Beverage_Bottle_volume_ml_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Beverage_Bottle_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, Beverage_CocaColaCan_volume_ml, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Beverage_CocaColaCan)
__flatbuffers_build_scalar_field(1, flatbuffers_, Beverage_CocaColaCan_height_mm, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Beverage_CocaColaCan)
__flatbuffers_build_scalar_field(2, flatbuffers_, Beverage_CocaColaCan_diameter_mm, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Beverage_CocaColaCan)
__flatbuffers_build_scalar_field(3, flatbuffers_, Beverage_CocaColaCan_type, Beverage_CocaColaType, Beverage_CocaColaType_enum_t, 1, 1, INT8_C(0), Beverage_CocaColaCan)
__flatbuffers_build_scalar_field(4, flatbuffers_, Beverage_CocaColaCan_caffeine_mg, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Beverage_CocaColaCan)
__flatbuffers_build_vector_field(5, flatbuffers_, Beverage_CocaColaCan_ingredients, Beverage_Ingredient, Beverage_Ingredient_enum_t, Beverage_CocaColaCan)
__flatbuffers_build_union_field(7, flatbuffers_, Beverage_CocaColaCan_packaging, Beverage_Packaging, Beverage_CocaColaCan)
__flatbuffers_build_union_table_value_field(flatbuffers_, Beverage_CocaColaCan_packaging, Beverage_Packaging, Can, Beverage_Can)
__flatbuffers_build_union_table_value_field(flatbuffers_, Beverage_CocaColaCan_packaging, Beverage_Packaging, Bottle, Beverage_Bottle)

static inline Beverage_CocaColaCan_ref_t Beverage_CocaColaCan_create(flatbuffers_builder_t *B __Beverage_CocaColaCan_formal_args)
{
    if (Beverage_CocaColaCan_start(B)
        || Beverage_CocaColaCan_volume_ml_add(B, v0)
        || Beverage_CocaColaCan_height_mm_add(B, v1)
        || Beverage_CocaColaCan_diameter_mm_add(B, v2)
        || Beverage_CocaColaCan_caffeine_mg_add(B, v4)
        || Beverage_CocaColaCan_ingredients_add(B, v5)
        || Beverage_CocaColaCan_packaging_add_value(B, v7)
        || Beverage_CocaColaCan_type_add(B, v3)
        || Beverage_CocaColaCan_packaging_add_type(B, v7.type)) {
        return 0;
    }
    return Beverage_CocaColaCan_end(B);
}

static Beverage_CocaColaCan_ref_t Beverage_CocaColaCan_clone(flatbuffers_builder_t *B, Beverage_CocaColaCan_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Beverage_CocaColaCan_start(B)
        || Beverage_CocaColaCan_volume_ml_pick(B, t)
        || Beverage_CocaColaCan_height_mm_pick(B, t)
        || Beverage_CocaColaCan_diameter_mm_pick(B, t)
        || Beverage_CocaColaCan_caffeine_mg_pick(B, t)
        || Beverage_CocaColaCan_ingredients_pick(B, t)
        || Beverage_CocaColaCan_packaging_pick(B, t)
        || Beverage_CocaColaCan_type_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Beverage_CocaColaCan_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* COLA_BUILDER_H */
