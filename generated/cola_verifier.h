#ifndef COLA_VERIFIER_H
#define COLA_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef COLA_READER_H
#include "cola_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int Beverage_Can_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Beverage_Bottle_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Beverage_CocaColaCan_verify_table(flatcc_table_verifier_descriptor_t *td);

static int Beverage_Packaging_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, Beverage_Can_verify_table); /* Can */
    case 2: return flatcc_verify_union_table(ud, Beverage_Bottle_verify_table); /* Bottle */
    default: return flatcc_verify_ok;
    }
}

static int Beverage_Can_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* material */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* recyclable */)) return ret;
    return flatcc_verify_ok;
}

static inline int Beverage_Can_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Beverage_Can_identifier, &Beverage_Can_verify_table);
}

static inline int Beverage_Can_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, Beverage_Can_identifier, &Beverage_Can_verify_table);
}

static inline int Beverage_Can_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Beverage_Can_type_identifier, &Beverage_Can_verify_table);
}

static inline int Beverage_Can_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, Beverage_Can_type_identifier, &Beverage_Can_verify_table);
}

static inline int Beverage_Can_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Beverage_Can_verify_table);
}

static inline int Beverage_Can_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &Beverage_Can_verify_table);
}

static inline int Beverage_Can_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Beverage_Can_verify_table);
}

static inline int Beverage_Can_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &Beverage_Can_verify_table);
}

static int Beverage_Bottle_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* material */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* volume_ml */)) return ret;
    return flatcc_verify_ok;
}

static inline int Beverage_Bottle_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Beverage_Bottle_identifier, &Beverage_Bottle_verify_table);
}

static inline int Beverage_Bottle_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, Beverage_Bottle_identifier, &Beverage_Bottle_verify_table);
}

static inline int Beverage_Bottle_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Beverage_Bottle_type_identifier, &Beverage_Bottle_verify_table);
}

static inline int Beverage_Bottle_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, Beverage_Bottle_type_identifier, &Beverage_Bottle_verify_table);
}

static inline int Beverage_Bottle_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Beverage_Bottle_verify_table);
}

static inline int Beverage_Bottle_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &Beverage_Bottle_verify_table);
}

static inline int Beverage_Bottle_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Beverage_Bottle_verify_table);
}

static inline int Beverage_Bottle_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &Beverage_Bottle_verify_table);
}

static int Beverage_CocaColaCan_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* volume_ml */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* height_mm */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* diameter_mm */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 1, 1) /* type */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 4, 4) /* caffeine_mg */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 5, 0, 1, 1, INT64_C(4294967295)) /* ingredients */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 7, 0, &Beverage_Packaging_union_verifier) /* packaging */)) return ret;
    return flatcc_verify_ok;
}

static inline int Beverage_CocaColaCan_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Beverage_CocaColaCan_identifier, &Beverage_CocaColaCan_verify_table);
}

static inline int Beverage_CocaColaCan_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, Beverage_CocaColaCan_identifier, &Beverage_CocaColaCan_verify_table);
}

static inline int Beverage_CocaColaCan_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Beverage_CocaColaCan_type_identifier, &Beverage_CocaColaCan_verify_table);
}

static inline int Beverage_CocaColaCan_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, Beverage_CocaColaCan_type_identifier, &Beverage_CocaColaCan_verify_table);
}

static inline int Beverage_CocaColaCan_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Beverage_CocaColaCan_verify_table);
}

static inline int Beverage_CocaColaCan_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &Beverage_CocaColaCan_verify_table);
}

static inline int Beverage_CocaColaCan_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Beverage_CocaColaCan_verify_table);
}

static inline int Beverage_CocaColaCan_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &Beverage_CocaColaCan_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* COLA_VERIFIER_H */
